function countHappyNumbers(n) {
  // Максимальная возможная сумма для n-разрядного числа
  const maxSum = 9 * n;

  // Инициализация массива для динамического программирования
  // dp[i][j] будет содержать количество способов выбора i цифр так, чтобы их сумма была равна j
  let dp = Array.from(
    { length: n + 1 },
    () => Array(maxSum + 1).fill(BigInt(0))
  );

  // Базовый случай: один способ выбрать 0 цифр с суммой 0
  dp[0][0] = BigInt(1);

  // Перебираем каждую цифру
  for (let i = 1; i <= n; i++) {
    // Перебираем каждую возможную сумму
    for (let j = 0; j <= maxSum; j++) {
      // Перебираем все возможные значения для текущей цифры (от 0 до 9)
      for (let k = 0; k <= 9; k++) {
        // Если текущая сумма минус значение цифры неотрицательное,
        // добавляем количество способов получить предыдущую сумму к текущему значению dp[i][j]
        if (j - k >= 0) {
          dp[i][j] += dp[i-1][j-k];
        }
      }
    }
  }

  // Вычисляем общее количество счастливых чисел
  // Для каждой возможной суммы удваиваем количество n-разрядных чисел с такой суммой
  // и добавляем к результату
  let result = BigInt(0);
  for (let sum = 0; sum <= maxSum; sum++) {
    result += dp[n][sum] * dp[n][sum];
  }

  return result.toString();
}

module.exports = countHappyNumbers;
